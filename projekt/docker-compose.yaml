version: '3.1'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-flask
    volumes:
      - type: bind
        source: app/static
        target: /app/static
      - "./:/app:z"
      - "/etc/localtime:/etc/localtime:ro"
    command: gunicorn run:app --bind 0.0.0.0:8000
    depends_on:
      - db
    ports:
      - 8000:8000
    environment:
      SQLALCHEMY_DATABASE_URI: 'mysql+pymysql://root:example@db/flask'
  
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    ports:
      - 27017:27017   
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: mongodbuser
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodbuser
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongodbuser
  db:
    image: mariadb
##     restart: always
    environment:
      MARIADB_ROOT_PASSWORD: example
      MARIADB_DATABASE: flask

  adminer:
    image: adminer
##     restart: always
    ports:
      - 5000:5000

  nginx:
    image: webapp-nginx
    build:
      context: .
      dockerfile: Dockerfile-nginx
    ports:
      - 8888:80
    depends_on:
      - app
    volumes:
      - type: bind
        source: app/static
        target: /home/app/web/staticfiles
volumes:
  static_volume:
  mongodbdata: